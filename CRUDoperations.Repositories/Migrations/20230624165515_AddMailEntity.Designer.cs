// <auto-generated />
using System;
using CRUDoperations.Repositories.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CRUDoperations.Repositories.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230624165515_AddMailEntity")]
    partial class AddMailEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CRUDoperations.DataModel.Entities.Mail", b =>
                {
                    b.Property<int>("MailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MailId"));

                    b.Property<string>("BCC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("MailStatusId")
                        .HasColumnType("int");

                    b.Property<int>("MailTypeId")
                        .HasColumnType("int");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("To")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MailId");

                    b.HasIndex("MailStatusId");

                    b.HasIndex("MailTypeId");

                    b.ToTable("Mail", (string)null);
                });

            modelBuilder.Entity("CRUDoperations.DataModel.Entities.MailAttachment", b =>
                {
                    b.Property<int>("MailAttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MailAttachmentId"));

                    b.Property<string>("AttachmentPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("MailId")
                        .HasColumnType("int");

                    b.HasKey("MailAttachmentId");

                    b.HasIndex("MailId");

                    b.ToTable("MailAttachment", (string)null);
                });

            modelBuilder.Entity("CRUDoperations.DataModel.Entities.MailStatus", b =>
                {
                    b.Property<int>("MailStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MailStatusId"));

                    b.Property<string>("ArDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.HasKey("MailStatusId");

                    b.ToTable("MailStatus", (string)null);

                    b.HasData(
                        new
                        {
                            MailStatusId = 1,
                            ArDescription = "جديد",
                            ArName = "جديد",
                            CreationTime = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EnDescription = "New",
                            EnName = "New",
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2023, 6, 24, 19, 55, 15, 550, DateTimeKind.Local).AddTicks(848)
                        },
                        new
                        {
                            MailStatusId = 2,
                            ArDescription = "تم الإرسال",
                            ArName = "تم الإرسال",
                            CreationTime = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EnDescription = "Sent",
                            EnName = "Sent",
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2023, 6, 24, 19, 55, 15, 550, DateTimeKind.Local).AddTicks(2447)
                        },
                        new
                        {
                            MailStatusId = 3,
                            ArDescription = "معالجة",
                            ArName = "معالجة",
                            CreationTime = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EnDescription = "Processing",
                            EnName = "Processing",
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2023, 6, 24, 19, 55, 15, 550, DateTimeKind.Local).AddTicks(2996)
                        },
                        new
                        {
                            MailStatusId = 4,
                            ArDescription = "فشل",
                            ArName = "فشل",
                            CreationTime = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EnDescription = "Failed",
                            EnName = "Failed",
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2023, 6, 24, 19, 55, 15, 550, DateTimeKind.Local).AddTicks(3529)
                        });
                });

            modelBuilder.Entity("CRUDoperations.DataModel.Entities.MailType", b =>
                {
                    b.Property<int>("MailTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MailTypeId"));

                    b.Property<string>("ArDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.HasKey("MailTypeId");

                    b.ToTable("MailType", (string)null);

                    b.HasData(
                        new
                        {
                            MailTypeId = 1,
                            ArDescription = "نسيان كلمة السر",
                            ArName = "نسيان كلمة السر",
                            CreationTime = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EnDescription = "Forget Password",
                            EnName = "Forget Password",
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2023, 6, 24, 19, 55, 15, 550, DateTimeKind.Local).AddTicks(4247)
                        },
                        new
                        {
                            MailTypeId = 2,
                            ArDescription = "بريد الترحيب",
                            ArName = "بريد الترحيب",
                            CreationTime = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EnDescription = "Welcome Mail",
                            EnName = "Welcome Mail",
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2023, 6, 24, 19, 55, 15, 550, DateTimeKind.Local).AddTicks(4895)
                        },
                        new
                        {
                            MailTypeId = 3,
                            ArDescription = "بريد التحقق",
                            ArName = "بريد التحقق",
                            CreationTime = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EnDescription = "Verification Mail",
                            EnName = "Verification Mail",
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2023, 6, 24, 19, 55, 15, 550, DateTimeKind.Local).AddTicks(5417)
                        });
                });

            modelBuilder.Entity("CRUDoperations.DataModel.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("CRUDoperations.DataModel.Entities.Mail", b =>
                {
                    b.HasOne("CRUDoperations.DataModel.Entities.MailStatus", "MailStatus")
                        .WithMany("Mails")
                        .HasForeignKey("MailStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRUDoperations.DataModel.Entities.MailType", "MailType")
                        .WithMany("Mails")
                        .HasForeignKey("MailTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MailStatus");

                    b.Navigation("MailType");
                });

            modelBuilder.Entity("CRUDoperations.DataModel.Entities.MailAttachment", b =>
                {
                    b.HasOne("CRUDoperations.DataModel.Entities.Mail", "Mail")
                        .WithMany("Attachments")
                        .HasForeignKey("MailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mail");
                });

            modelBuilder.Entity("CRUDoperations.DataModel.Entities.Mail", b =>
                {
                    b.Navigation("Attachments");
                });

            modelBuilder.Entity("CRUDoperations.DataModel.Entities.MailStatus", b =>
                {
                    b.Navigation("Mails");
                });

            modelBuilder.Entity("CRUDoperations.DataModel.Entities.MailType", b =>
                {
                    b.Navigation("Mails");
                });
#pragma warning restore 612, 618
        }
    }
}
